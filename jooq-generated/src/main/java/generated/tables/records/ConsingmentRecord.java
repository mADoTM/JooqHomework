/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.Consingment;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConsingmentRecord extends UpdatableRecordImpl<ConsingmentRecord> implements Record3<Integer, LocalDate, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.consingment.consingment_id</code>.
     */
    public ConsingmentRecord setConsingmentId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.consingment.consingment_id</code>.
     */
    public Integer getConsingmentId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.consingment.order_date</code>.
     */
    public ConsingmentRecord setOrderDate(LocalDate value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.consingment.order_date</code>.
     */
    public LocalDate getOrderDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>public.consingment.company_id</code>.
     */
    public ConsingmentRecord setCompanyId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.consingment.company_id</code>.
     */
    public Integer getCompanyId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, LocalDate, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, LocalDate, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Consingment.CONSINGMENT.CONSINGMENT_ID;
    }

    @Override
    public Field<LocalDate> field2() {
        return Consingment.CONSINGMENT.ORDER_DATE;
    }

    @Override
    public Field<Integer> field3() {
        return Consingment.CONSINGMENT.COMPANY_ID;
    }

    @Override
    public Integer component1() {
        return getConsingmentId();
    }

    @Override
    public LocalDate component2() {
        return getOrderDate();
    }

    @Override
    public Integer component3() {
        return getCompanyId();
    }

    @Override
    public Integer value1() {
        return getConsingmentId();
    }

    @Override
    public LocalDate value2() {
        return getOrderDate();
    }

    @Override
    public Integer value3() {
        return getCompanyId();
    }

    @Override
    public ConsingmentRecord value1(Integer value) {
        setConsingmentId(value);
        return this;
    }

    @Override
    public ConsingmentRecord value2(LocalDate value) {
        setOrderDate(value);
        return this;
    }

    @Override
    public ConsingmentRecord value3(Integer value) {
        setCompanyId(value);
        return this;
    }

    @Override
    public ConsingmentRecord values(Integer value1, LocalDate value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConsingmentRecord
     */
    public ConsingmentRecord() {
        super(Consingment.CONSINGMENT);
    }

    /**
     * Create a detached, initialised ConsingmentRecord
     */
    public ConsingmentRecord(Integer consingmentId, LocalDate orderDate, Integer companyId) {
        super(Consingment.CONSINGMENT);

        setConsingmentId(consingmentId);
        setOrderDate(orderDate);
        setCompanyId(companyId);
    }

    /**
     * Create a detached, initialised ConsingmentRecord
     */
    public ConsingmentRecord(generated.tables.pojos.Consingment value) {
        super(Consingment.CONSINGMENT);

        if (value != null) {
            setConsingmentId(value.getConsingmentId());
            setOrderDate(value.getOrderDate());
            setCompanyId(value.getCompanyId());
        }
    }
}
