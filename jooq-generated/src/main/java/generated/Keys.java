/*
 * This file is generated by jOOQ.
 */
package generated;


import generated.tables.Company;
import generated.tables.Consingment;
import generated.tables.FlywaySchemaHistory;
import generated.tables.Position;
import generated.tables.Product;
import generated.tables.records.CompanyRecord;
import generated.tables.records.ConsingmentRecord;
import generated.tables.records.FlywaySchemaHistoryRecord;
import generated.tables.records.PositionRecord;
import generated.tables.records.ProductRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CompanyRecord> COMPANY_PK = Internal.createUniqueKey(Company.COMPANY, DSL.name("company_pk"), new TableField[] { Company.COMPANY.COMPANY_ID }, true);
    public static final UniqueKey<CompanyRecord> COMPANY_TIN_KEY = Internal.createUniqueKey(Company.COMPANY, DSL.name("company_tin_key"), new TableField[] { Company.COMPANY.TIN }, true);
    public static final UniqueKey<ConsingmentRecord> CONSINGMENT_PK = Internal.createUniqueKey(Consingment.CONSINGMENT, DSL.name("consingment_pk"), new TableField[] { Consingment.CONSINGMENT.CONSINGMENT_ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<ProductRecord> PRODUCT_PK = Internal.createUniqueKey(Product.PRODUCT, DSL.name("product_pk"), new TableField[] { Product.PRODUCT.INNER_CODE }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ConsingmentRecord, CompanyRecord> CONSINGMENT__CONSINGMENT_COMPANY_ID_FKEY = Internal.createForeignKey(Consingment.CONSINGMENT, DSL.name("consingment_company_id_fkey"), new TableField[] { Consingment.CONSINGMENT.COMPANY_ID }, Keys.COMPANY_PK, new TableField[] { Company.COMPANY.COMPANY_ID }, true);
    public static final ForeignKey<PositionRecord, ConsingmentRecord> POSITION__POSITION_CONSINGMENT_ID_FKEY = Internal.createForeignKey(Position.POSITION, DSL.name("position_consingment_id_fkey"), new TableField[] { Position.POSITION.CONSINGMENT_ID }, Keys.CONSINGMENT_PK, new TableField[] { Consingment.CONSINGMENT.CONSINGMENT_ID }, true);
    public static final ForeignKey<PositionRecord, ProductRecord> POSITION__POSITION_INNER_CODE_FKEY = Internal.createForeignKey(Position.POSITION, DSL.name("position_inner_code_fkey"), new TableField[] { Position.POSITION.INNER_CODE }, Keys.PRODUCT_PK, new TableField[] { Product.PRODUCT.INNER_CODE }, true);
}
